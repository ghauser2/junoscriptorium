The track IP JUNOScript implementation utilizes the event system. The event system allows for the triggering of events based upon receiving a specific syslog or SNMP message. In this case an event "TRACKIP" is triggered every sixty seconds calling the Track IP JUNOScript. The script reads the chassis cluster redundancy group information looking for the track IP configuration elements. The elements are stored in a macro that is created in any redundancy group. Below is an example configuration for track IP is shown.

[Track IP configuration]

apply-macro monitoring-options {
       clear-failover;
       full-failover; 
}
reth-count 2;
control-ports {
    fpc 2 port 0;
    fpc 14 port 0;
}
redundancy-group 0 {
    node 0 priority 254;
    node 1 priority 1;
}
redundancy-group 1 {
    apply-macro track-gateway {
        server 1.1.1.222;
        weight 255;
	count 5; /* Optional */
	routing-instance Test; /* Optional */
	interval 2; /* Optional */
	wait 1; /* Optional */
    }
/* Optional */
    node 0 priority 254;
    node 1 priority 1;
}

The macro requires that it begins with "track-" and contains a server variable and a weight. The server variable requires an IP address or hostname; this is the host that will be tested three times. If the ping attempt is successful then the script will exit successfully. If the ping attempt fails then it will check the weight. If the weight is equal to or greater than 255 then the firewall will fail that redundancy group over to the other chassis. If there are multiple hosts listed and several of them fail the weights will be added and again checked to see if they equal or exceed 255. The track-ip script only can run within a sixty-second window. Because of this the total run time is calculated   with the following formula: ((60 / ((count * interval) + (wait -1))). Any fractional number is remained so partial attempts are not run. It is important to calculate the total run time so it does not exceed 60 seconds. 

Configuring Track IP Event Options

When the script starts it will test to see if the current routing engine is the primary for redundancy group zero, if it is not then the script will not run. Only the primary routing engine is able to generate pings so it will only execute script. Example two below the event-options configuration is shown.

[Event Option Configuration]

generate-event {
    TRACK-IP time-interval 60;
}
policy TRACK-IP {
    events TRACK-IP;
    then {
        event-script track-ip.xsl;
    }
}
event-script {
    file track-ip.xsl;
}

There are four important stanzas that are configured in example two. The first is generate event; this stanza generates a "TRACK-IP" event every sixty seconds. Then there is the policy "TRACK-IP". This policy listens for the "TRACK-IP" event. When it sees the event it executes the track-ip.xsl JUNOScript. Any output generated is sent to the destination TRACKIPLOG. The event script stanza loads the track-ip.xsl script and has JUNOS validate it so it is ready for execution.

Validating the Track IP Configuration

The configuration options that begin with "apply macro" are all user created options. Because of this JUNOS does not validate these by default. To create custom validation options a commit script must be used. To validate the track IP configuration the commit script "srx-ha-validate.xsl" was created. The script must be placed in the /var/db/scripts/commit directory. Secondly it must be added to the JUNOS configuration by using the command "set system scripts commit file srx-ha-validate.xsl". Upon the committing of this configuration the options for track IP will be validated. This prevents misspelling items like "routing-instance" or giving numbers that are out of the range of the scripts capabilities. In the event that an option is not correctly con figured a warning will be emitted. This does notify the administrator that something is not right. It will not prevent the misconfiguration of track IP; it just creates a warning message. This was done to ensure interoperability with the Network and Security Manager platform (NSM). In the event that a warning message is received simply review the message and resolve the error by correcting the configuration mistake.

